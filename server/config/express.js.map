{"version":3,"sources":["../../../server/config/express.js"],"names":[],"mappings":";;;;AAIA;;;;;;kBAmBe,UAAS,GAAT,EAAc;AAC3B,MAAI,MAAM,IAAI,GAAJ,CAAQ,KAAR,CAAN,CADuB;;AAG3B,MAAI,GAAJ,CAAQ,OAAR,EAAiB,sBAAO,IAAP,GAAc,eAAd,CAAjB,CAH2B;AAI3B,MAAI,MAAJ,CAAW,MAAX,EAAmB,QAAQ,KAAR,EAAe,UAAf,CAAnB,CAJ2B;AAK3B,MAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB,EAL2B;AAM3B,MAAI,GAAJ,CAAQ,4BAAR,EAN2B;AAO3B,MAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAE,UAAU,KAAV,EAAxB,CAAR,EAP2B;AAQ3B,MAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR,EAR2B;AAS3B,MAAI,GAAJ,CAAQ,+BAAR,EAT2B;AAU3B,MAAI,GAAJ,CAAQ,6BAAR,EAV2B;AAW3B,MAAI,GAAJ,CAAQ,mBAAS,UAAT,EAAR;;;;;AAX2B,KAgB3B,CAAI,GAAJ,CAAQ,8BAAQ;AACd,YAAQ,sBAAO,OAAP,CAAe,OAAf;AACR,uBAAmB,IAAnB;AACA,YAAQ,KAAR;AACA,WAAO,IAAI,UAAJ,CAAe;AACpB,0BAAoB,mBAAS,UAAT;AACpB,UAAI,cAAJ;KAFK,CAAP;GAJM,CAAR;;;;;;AAhB2B,MA8BvB,WAAW,GAAX,EAAgB;AAClB,QAAI,GAAJ,CAAQ,qBAAM;AACZ,YAAM;AACJ,iBAAS,IAAT;OADF;AAGA,cAAQ,YAAR;AACA,YAAM;AACJ,gBAAQ,QAAR;AACA,2BAAmB,IAAnB;AACA,iBAAS,IAAT;OAHF;AAKA,qBAAe,IAAf;KAVM,CAAR,EADkB;GAApB;;AAeA,MAAI,GAAJ,CAAQ,SAAR,EAAmB,eAAK,IAAL,CAAU,sBAAO,IAAP,EAAa,QAAvB,CAAnB,EA7C2B;;AA+C3B,MAAI,iBAAiB,GAAjB,EAAsB;AACxB,QAAI,GAAJ,CAAQ,4BAAQ,eAAK,IAAL,CAAU,sBAAO,IAAP,EAAa,QAAvB,EAAiC,aAAjC,CAAR,CAAR,EADwB;AAExB,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAAR,EAFwB;AAGxB,QAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR,EAHwB;GAA1B;;AAMA,MAAI,kBAAkB,GAAlB,EAAuB;AACzB,QAAI,GAAJ,CAAQ,QAAQ,oBAAR,GAAR,EADyB;GAA3B;;AAIA,MAAI,kBAAkB,GAAlB,IAAyB,WAAW,GAAX,EAAgB;AAC3C,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,eAAK,IAAL,CAAU,sBAAO,IAAP,EAAa,MAAvB,CAAf,CAAR,EAD2C;AAE3C,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAAR,EAF2C;AAG3C,QAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR,EAH2C;AAI3C,QAAI,GAAJ,CAAQ,6BAAR;AAJ2C,GAA7C;CAzDa;;AAjBf;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAI,aAAa,qDAAb","file":"express.js","sourcesContent":["/**\n * Express configuration\n */\n\n'use strict';\n\nimport express from 'express';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport methodOverride from 'method-override';\nimport cookieParser from 'cookie-parser';\nimport errorHandler from 'errorhandler';\nimport path from 'path';\nimport lusca from 'lusca';\nimport config from './environment';\nimport passport from 'passport';\nimport session from 'express-session';\nimport connectMongo from 'connect-mongo';\nimport mongoose from 'mongoose';\nvar MongoStore = connectMongo(session);\n\nexport default function(app) {\n  var env = app.get('env');\n\n  app.set('views', config.root + '/server/views');\n  app.engine('html', require('ejs').renderFile);\n  app.set('view engine', 'html');\n  app.use(compression());\n  app.use(bodyParser.urlencoded({ extended: false }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n  app.use(cookieParser());\n  app.use(passport.initialize());\n\n  // Persist sessions with MongoStore / sequelizeStore\n  // We need to enable sessions for passport-twitter because it's an\n  // oauth 1.0 strategy, and Lusca depends on sessions\n  app.use(session({\n    secret: config.secrets.session,\n    saveUninitialized: true,\n    resave: false,\n    store: new MongoStore({\n      mongooseConnection: mongoose.connection,\n      db: '420developer'\n    })\n  }));\n\n  /**\n   * Lusca - express server security\n   * https://github.com/krakenjs/lusca\n   */\n  if ('test' !== env) {\n    app.use(lusca({\n      csrf: {\n        angular: true\n      },\n      xframe: 'SAMEORIGIN',\n      hsts: {\n        maxAge: 31536000, //1 year, in seconds\n        includeSubDomains: true,\n        preload: true\n      },\n      xssProtection: true\n    }));\n  }\n\n  app.set('appPath', path.join(config.root, 'client'));\n\n  if ('production' === env) {\n    app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n    app.use(express.static(app.get('appPath')));\n    app.use(morgan('dev'));\n  }\n\n  if ('development' === env) {\n    app.use(require('connect-livereload')());\n  }\n\n  if ('development' === env || 'test' === env) {\n    app.use(express.static(path.join(config.root, '.tmp')));\n    app.use(express.static(app.get('appPath')));\n    app.use(morgan('dev'));\n    app.use(errorHandler()); // Error handler - has to be last\n  }\n}\n"]}