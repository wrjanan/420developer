{"version":3,"sources":["../../../../server/api/user/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAb;;AAEJ,IAAI,eAAe;AACjB,SAAO,gBAAP;AACA,WAAS,kBAAT;AACA,MAAI,aAAJ;AACA,kBAAgB,yBAAhB;AACA,QAAM,eAAN;AACA,UAAQ,iBAAR;CANE;;AASJ,IAAI,kBAAkB;AACpB,8CAAkB;AAChB,WAAO,6BAAP,CADgB;GADE;AAIpB,4BAAQ,MAAM;AACZ,WAAO,yBAAyB,IAAzB,CADK;GAJM;CAAlB;;AASJ,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EAAL;AACA,OAAK,MAAM,GAAN,EAAL;AACA,QAAM,MAAM,GAAN,EAAN;AACA,UAAQ,MAAM,GAAN,EAAR;CAJE;;;AAQJ,IAAI,YAAY,WAAW,SAAX,EAAsB;AACpC,aAAW;AACT,8BAAS;AACP,aAAO,UAAP,CADO;KADA;GAAX;AAKA,uBAAqB,YAArB;AACA,6BAA2B,eAA3B;CAPc,CAAZ;;AAUJ,SAAS,kBAAT,EAA6B,YAAW;;AAEtC,KAAG,0CAAH,EAA+C,YAAW;AACxD,cAAU,MAAV,CAAiB,KAAjB,CAAuB,UAAvB,EADwD;GAAX,CAA/C,CAFsC;;AAMtC,WAAS,gBAAT,EAA2B,YAAW;;AAEpC,OAAG,6DAAH,EAAkE,YAAW;AAC3E,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,2BADjB,EAC8C,gBAD9C,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CAD2E;KAAX,CAAlE,CAFoC;GAAX,CAA3B,CANsC;;AAgBtC,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,+DAAH,EAAoE,YAAW;AAC7E,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,2BADpB,EACiD,kBADjD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CAD6E;KAAX,CAApE,CAF2C;GAAX,CAAlC,CAhBsC;;AA0BtC,WAAS,mBAAT,EAA8B,YAAW;;AAEvC,OAAG,yDAAH,EAA8D,YAAW;AACvE,iBAAW,GAAX,CACG,QADH,CACY,KADZ,EACmB,6BADnB,EACkD,aADlD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADuE;KAAX,CAA9D,CAFuC;GAAX,CAA9B,CA1BsC;;AAoCtC,WAAS,6BAAT,EAAwC,YAAW;;AAEjD,OAAG,qEAAH,EAA0E,YAAW;AACnF,iBAAW,GAAX,CACG,QADH,CACY,eADZ,EAC6B,6BAD7B,EAC4D,yBAD5D,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADmF;KAAX,CAA1E,CAFiD;GAAX,CAAxC,CApCsC;;AA8CtC,WAAS,oBAAT,EAA+B,YAAW;;AAExC,OAAG,2DAAH,EAAgE,YAAW;AACzE,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,6BADpB,EACmD,eADnD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADyE;KAAX,CAAhE,CAFwC;GAAX,CAA/B,CA9CsC;;AAwDtC,WAAS,iBAAT,EAA4B,YAAW;;AAErC,OAAG,wCAAH,EAA6C,YAAW;AACtD,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,iBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADsD;KAAX,CAA7C,CAFqC;GAAX,CAA5B,CAxDsC;CAAX,CAA7B","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar userCtrlStub = {\n  index: 'userCtrl.index',\n  destroy: 'userCtrl.destroy',\n  me: 'userCtrl.me',\n  changePassword: 'userCtrl.changePassword',\n  show: 'userCtrl.show',\n  create: 'userCtrl.create'\n};\n\nvar authServiceStub = {\n  isAuthenticated() {\n    return 'authService.isAuthenticated';\n  },\n  hasRole(role) {\n    return 'authService.hasRole.' + role;\n  }\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar userIndex = proxyquire('./index', {\n  'express': {\n    Router() {\n      return routerStub;\n    }\n  },\n  './user.controller': userCtrlStub,\n  '../../auth/auth.service': authServiceStub\n});\n\ndescribe('User API Router:', function() {\n\n  it('should return an express router instance', function() {\n    userIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/users', function() {\n\n    it('should verify admin role and route to user.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'authService.hasRole.admin', 'userCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/users/:id', function() {\n\n    it('should verify admin role and route to user.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'authService.hasRole.admin', 'userCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/users/me', function() {\n\n    it('should be authenticated and route to user.controller.me', function() {\n      routerStub.get\n        .withArgs('/me', 'authService.isAuthenticated', 'userCtrl.me')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/users/:id/password', function() {\n\n    it('should be authenticated and route to user.controller.changePassword', function() {\n      routerStub.put\n        .withArgs('/:id/password', 'authService.isAuthenticated', 'userCtrl.changePassword')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/users/:id', function() {\n\n    it('should be authenticated and route to user.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'authService.isAuthenticated', 'userCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/users', function() {\n\n    it('should route to user.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'userCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}